vcl 4.0;
import directors;

{% for host in hosts %}
    {% for backend in host.backends %}
        backend {{ backend.name }}
        {
            .host = "{{ backend.hostname }}";
            .port = "{{ backend.port }}";
            .connect_timeout = {{ backend.connectTimeout }}s;
            .first_byte_timeout = {{ backend.firstByteTimeout }}s;
            .between_bytes_timeout = {{ backend.betweenBytesTimeout }}s;
            {#.pipe_timeout = {{ backend.connectTimeout }}s;#}
        }
    {% endfor %}
{% endfor %}

sub vcl_init {
    {% for host in hosts %}
        new {{ host.directorName }} = directors.{{ host.backendStrategy }}();

        {% for backend in host.backends %}
            {{ host.directorName }}.add_backend({{ backend.name }});
        {% endfor %}
    {% endfor %}
}

backend acmetool {
   .host = "127.0.0.1";
   .port = "8080";
}

acl local {
  "localhost";
}

sub vcl_recv
{
    call common_recv;

    {% for host in hosts %}
        if(req.http.host ~ "^{{ host.domain }}$")
        {
            {% if host.redirect %} {# redirect #}
                return (synth(301, "{{ host.redirect }}"{% if host.redirectKeepUrl %} + req.url{% endif %}));
            {% endif %}

            {% if host.https == 2 %} {# https only #}
                if (client.ip !~ local) {
                    return (synth(301, "https://{{ host.domain }}" + req.url));
                }
            {% endif %}

            set req.backend_hint = {{ host.directorName }}.backend();

            return({{ host.transferType }});
        }
    {% endfor %}

    return (synth(404, "Not Found"));
}

sub common_recv
{
    if (req.url ~ "^/.well-known/acme-challenge/") {
        set req.backend_hint = acmetool;
        return (pass);
    }

    /* Forward client ip */
    if (client.ip !~ local) {
    	set req.http.X-Forwarded-For = regsub(client.ip, ":.*", "");
    }
}

sub vcl_deliver
{
    call edit_deliver_header;
}


sub edit_deliver_header
{
    unset   resp.http.Server;
    unset   resp.http.Age;
    unset   resp.http.X-Varnish;
    unset   resp.http.Via;
    unset   resp.http.X-Powered-By;
    set     resp.http.X-Served-By   = server.hostname;
}

sub vcl_synth {
    if (resp.status == 301 || resp.status == 302) {
        set resp.http.location = resp.reason;
        set resp.reason = "Moved";
        return (deliver);
    }
}
